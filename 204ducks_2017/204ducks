#!/usr/bin/env python3

import  sys
import  time
from math import *

def calc_prob(a, t):
    res = 0
    res = a * exp(-t) + (4 - 3 * a) * exp(-2 * t) + (2 * a - 4) * exp(-4 * t)
    return (res)

def come_back(a, p):
    i = 0.0
    res = 0.0
    while (i <= (p * 1000)):
        res += calc_prob(a, i / 100)
        if (res >= p):
            return (i / 100)
        i += 1

def back_after(a, t):
    i = 0
    res = 0
    while (i < (t * 1000)):
        res += (calc_prob(a, i / 1000))
        i += 1
    return (res / 10)

def standard_deviation(esp, a, t):
    res = 0
    res = pow((t - esp), 2) * (calc_prob(a, t) / 10)
    return (res)

def display_res(esp, sd, a):
    x = divmod(esp * 60, 60)
    cinq = divmod(come_back(a, 50) * 61, 61)
    neuf = divmod(come_back(a, 99) * 60, 60)
    print("average return time: %0.0fm %0.0fs" %(x[0], x[1]))
    print("standard deviation: {0:.3f}".format(sd))
    print("time after which 50%% of the ducks come back: %0.0fm %02ds" %(cinq[0], cinq[1]))
    print("time after which 99%% of the ducks come back: %0.0fm %02ds" %(neuf[0], neuf[1]))
    print("percentage of ducks back after 1 minute: {0:.1f}%".format((back_after(a, 1))))
    print("percentage of ducks back after 2 minutes: {0:.1f}%".format((back_after(a, 2))))

def calc_ducks(a):
    p = 0.0
    t = 0.0
    sd = 0.0
    esp = 0.0
    while (t < 99.999):
        p += (calc_prob(a, t) / 10)
        esp += t * (calc_prob(a, t) / 10)
        t += 0.001
    esp = (esp / 99.999)
    while (t > 0):
        sd += standard_deviation(esp, a, t)
        t -= 0.001
    sd = (sd / 99.9999)
    sd = pow(sd, 0.5)
    display_res(esp, sd, a)

if (len(sys.argv) > 2 or len(sys.argv) < 2):
    print ("Error: Number of arguments must 2 (see -h)")
    exit(84)
if (len(sys.argv) == 2 and sys.argv[1] == "-h"):
            print("USAGE\n\t./204ducks a\n\nDESCRIPTION\n\ta\tconstant")
            exit(84)
if(len(sys.argv) == 2):
    try:
        a = float(sys.argv[1])
    except:
        print("Error: Bad arguments: a must be a float")
        exit(84)
    if (a < 0 or a > 2.5):
        print("a must be between 0 and 2.5")
        exit(84)
    calc_ducks(a)
exit(0)
